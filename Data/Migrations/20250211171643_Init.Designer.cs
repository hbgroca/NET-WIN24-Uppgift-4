// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250211171643_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 100L);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("CompanyNr")
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Töm & Glöm AB",
                            CompanyNr = "556501-1234",
                            Email = "nustrulardetigen@helvetes.net",
                            FirstName = "Robban",
                            LastName = "Carlsson",
                            PhoneNumber = "555123456"
                        },
                        new
                        {
                            Id = 2,
                            Email = "sara.syntax@domain.net",
                            FirstName = "Sara",
                            LastName = "Syntax",
                            PhoneNumber = "555654321"
                        },
                        new
                        {
                            Id = 3,
                            Email = "mackan.nilsson@domain.net",
                            FirstName = "Markus",
                            LastName = "Nilsson",
                            PhoneNumber = "555123456"
                        },
                        new
                        {
                            Id = 4,
                            Email = "henke@domain.net",
                            FirstName = "Henrik",
                            LastName = "Rosengren",
                            PhoneNumber = "555123456"
                        });
                });

            modelBuilder.Entity("Data.Entities.EmployeeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 100L);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "nustrulardetigen@helvetes.net",
                            FirstName = "Klabbe",
                            LastName = "Röv",
                            Phone = "0701234567"
                        },
                        new
                        {
                            Id = 2,
                            Email = "hasse.kopilator@domain.net",
                            FirstName = "Hasse",
                            LastName = "Kompilator",
                            Phone = "0700765321"
                        },
                        new
                        {
                            Id = 3,
                            Email = "nisse@domain.net",
                            FirstName = "Nils",
                            LastName = "Visman",
                            Phone = "0700123456"
                        });
                });

            modelBuilder.Entity("Data.Entities.ProjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 100L);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(125)");

                    b.Property<decimal>("ServiceCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StatusId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            EmployeeId = 1,
                            EndDate = new DateOnly(2025, 4, 1),
                            ProjectName = "Build database 4 client",
                            ServiceCost = 6500m,
                            ServiceId = 4,
                            StartDate = new DateOnly(2025, 2, 1),
                            StatusId = 2
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 4,
                            EmployeeId = 1,
                            EndDate = new DateOnly(2026, 5, 29),
                            ProjectName = "Hang out with Robban",
                            ServiceCost = 0m,
                            ServiceId = 2,
                            StartDate = new DateOnly(2024, 8, 26),
                            StatusId = 2
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            EmployeeId = 3,
                            EndDate = new DateOnly(2025, 8, 31),
                            ProjectName = "Build TodoApp",
                            ServiceCost = 9000m,
                            ServiceId = 6,
                            StartDate = new DateOnly(2025, 4, 1),
                            StatusId = 3
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 2,
                            EmployeeId = 2,
                            EndDate = new DateOnly(2025, 1, 31),
                            ProjectName = "Update business webpage",
                            ServiceCost = 4400m,
                            ServiceId = 2,
                            StartDate = new DateOnly(2024, 12, 1),
                            StatusId = 1
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 3,
                            EmployeeId = 3,
                            EndDate = new DateOnly(2025, 1, 31),
                            ProjectName = "Optimise services",
                            ServiceCost = 3790m,
                            ServiceId = 4,
                            StartDate = new DateOnly(2024, 12, 1),
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("Data.Entities.ServiceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 100L);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(125)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 135m,
                            ServiceName = "Consulting"
                        },
                        new
                        {
                            Id = 2,
                            Price = 145m,
                            ServiceName = "Web Development"
                        },
                        new
                        {
                            Id = 3,
                            Price = 145m,
                            ServiceName = "Mobile Development"
                        },
                        new
                        {
                            Id = 4,
                            Price = 145m,
                            ServiceName = "Database Development"
                        },
                        new
                        {
                            Id = 5,
                            Price = 140m,
                            ServiceName = "Backend Performance"
                        },
                        new
                        {
                            Id = 6,
                            Price = 0m,
                            ServiceName = "Hang out"
                        });
                });

            modelBuilder.Entity("Data.Entities.StatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusDescription = "Completed"
                        },
                        new
                        {
                            Id = 2,
                            StatusDescription = "In Progress"
                        },
                        new
                        {
                            Id = 3,
                            StatusDescription = "Not Started"
                        });
                });

            modelBuilder.Entity("Data.Entities.ProjectEntity", b =>
                {
                    b.HasOne("Data.Entities.CustomerEntity", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Data.Entities.EmployeeEntity", "Employee")
                        .WithMany("Projects")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Data.Entities.ServiceEntity", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId");

                    b.HasOne("Data.Entities.StatusEntity", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("Service");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Data.Entities.CustomerEntity", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Data.Entities.EmployeeEntity", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
